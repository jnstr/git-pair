#!/bin/bash

coworkers=()
delimiterString='autogenerated coworkers'

ask_for_coworker() {
    echo "Give the name of the coworker"
    read NAME
    echo "Give the e-mail of the coworker"
    read MAIL
    coworkers+=("${NAME} <${MAIL}>")
    echo #

    read -r -p "Add another coworker? [Y/n]" response
    response=${response,,} # tolower
    if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
        echo #
        ask_for_coworker
    fi
}

render_git_commit_error_message() {
    # output colors
    red=$(tput setaf 1)
    clear_color=$(tput sgr0)

    echo 'Please set a git commit template in your git config'
    echo 'This can be done by setting commit.template in your ~/.gitconfig'
    echo -e "${red}[commit]"
    echo '  template = ~/.gitmessage'
    echo -e "${clear_color}and make sure that file exists"
}

# We need to make sure the git commit template file is set and exists
gitCommitTemplatePath=$(git config commit.template)
if [ -z "$gitCommitTemplatePath" ]; then
    render_git_commit_error_message
    exit
fi
# Since ~/ can't be in a string, we replace it with $HOME
gitCommitTemplatePath="${gitCommitTemplatePath//\~/$HOME}"
if [ ! -f "$gitCommitTemplatePath" ]; then
    echo "The file ${gitCommitTemplatePath} does not exist"
    exit
fi

# Remove the delimiter string and all lines below
sed -i "/#${delimiterString}/Q" $gitCommitTemplatePath

if [[ $1 = 'stop' ]]; then
    echo 'stopped pairing'
    exit
fi

ask_for_coworker

echo "#${delimiterString}" >> $gitCommitTemplatePath

# We want to amend the last commit with the authors => get the last message
if [[ $1 = 'amend' ]]; then
    lastCommitMessage=$(git log --format=%B -n1)
    lastCommitMessage+='\n'
fi

for COWORKER in "${coworkers[@]}"; do
    echo "Co-authored-by: $COWORKER" >> $gitCommitTemplatePath

    # also add the authors to the latest commit
    if [[ $1 = 'amend' ]]; then
        lastCommitMessage+='\n'
        lastCommitMessage+="Co-authored-by: $COWORKER"
    fi
done

if [[ $1 = 'amend' ]]; then
    git commit --amend -q -m "$(echo -e "$lastCommitMessage")"
    echo #
    echo "The co-authors were added to the last commit"
fi

echo #
echo 'You are now pairing with'
echo "${coworkers[@]}"
